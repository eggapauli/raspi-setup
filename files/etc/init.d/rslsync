#!/bin/bash
### BEGIN INIT INFO
# Provides: rslsync
# Required-Start: $local_fs $remote_fs
# Required-Stop: $local_fs $remote_fs
# Should-Start: $network
# Should-Stop: $network
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Multi-user daemonized version of rslsync.
# Description: Starts the rslsync daemon for all registered users.
### END INIT INFO

# Replace with linux users you want to run ResilioSync clients for
RSLSYNC_USERS="pi"
DAEMON=/usr/bin/rslsync

start() {
  for rslsyncuser in $RSLSYNC_USERS
  do
    HOMEDIR=`getent passwd $rslsyncuser | cut -d: -f6`
    config=$HOMEDIR/.sync/config.json
    log=$HOMEDIR/.sync/log
    if [ -f $config ]; then
      echo "Starting ResilioSync for $rslsyncuser"
      start-stop-daemon -o -c $rslsyncuser -S -u $rslsyncuser -x $DAEMON -- --config $config --log $log
    else
      echo "Couldn't start ResilioSync for $rslsyncuser (no $config found)"
    fi
  done
}

stop() {
  for rslsyncuser in $RSLSYNC_USERS
  do
    dbpid=`pgrep -fu $rslsyncuser $DAEMON`
    if [ ! -z "$dbpid" ]; then
      echo "Stopping ResilioSync for $rslsyncuser"
      start-stop-daemon -o -c $rslsyncuser -K -u $rslsyncuser -x $DAEMON
    fi
  done
}

status() {
  for rslsyncuser in $RSLSYNC_USERS
  do
    dbpid=`pgrep -fu $rslsyncuser $DAEMON`
    if [ -z "$dbpid" ]; then
      echo "ResilioSync for USER $rslsyncuser: not running."
    else
      echo "ResilioSync for USER $rslsyncuser: running (pid $dbpid)"
    fi
  done
}

case "$1" in
 start)
start
;;
stop)
stop
;;
restart|reload|force-reload)
stop
start
;;
status)
status
;;
*)
echo "Usage: /etc/init.d/rslsync {start|stop|reload|force-reload|restart|status}"
exit 1
esac

exit 0
